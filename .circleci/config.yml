version: 2
jobs:
  build:
    docker:
      - image: circleci/android:api-30
    steps:
    - checkout
    - run:
        command: |
          sdkmanager "system-images;android-29;default;x86"
        name: Install system image "system-images;android-29;default;x86"
    - run:
        command: |
          find . -name 'build.gradle' | sort | xargs cat |
          shasum | awk '{print $1}' > ./tmp_gradle_cache_seed
        name: Generate cache checksum
    - restore_cache:
        key: gradle-v1a-{{ arch }}-{{ checksum "./tmp_gradle_cache_seed" }}
        name: Restore gradle cache
    - run:
        name: gradle.property
        command: |
          mkdir -p ~/.gradle
          curl $GRADLE_PROPERTY_PATH --output ~/.gradle/gradle.properties
          curl $SECRET_KEY_RING_PATH --output tcpsocketlibrary/secret-keys.gpg
    - run:
        command: |
          ./gradlew build
        name: 'Run: ./gradlew build'
    - save_cache:
        key: gradle-v1a-{{ arch }}-{{ checksum "./tmp_gradle_cache_seed" }}
        name: Save gradle cache
        paths:
        - ~/.gradle/caches
        - ~/.gradle/wrapper
    - save_cache:
        key: gradle-properties-${CIRCLE_WORKFLOW_ID}
        name: Save gradle properties
        paths:
          - ~/.gradle/gradle.properties
    - store_artifacts:
        path: tcpsocketlibrary/build/reports
        destination: reports
    - store_test_results:
        path: tcpsocketlibrary/build/test-results
    - persist_to_workspace:
        root: .
        paths:
          - .
    resource_class: medium
  deploy:
    docker:
      - image: circleci/android:api-30
    working_directory: ~/code
    steps:
      - attach_workspace:
          at: .
      - restore_cache:
          key: gradle-v1a-{{ arch }}-{{ checksum "./tmp_gradle_cache_seed" }}
          name: Restore gradle cache
      - restore_cache:
          key: gradle-properties-${CIRCLE_WORKFLOW_ID}
          name: Restore gradle properties
      - run:
          name: Upload Maven Central
          command: ./gradlew publish

workflows:
  version: 2
  build_deploy:
    jobs:
    - build
    - deploy:
        requires:
          - build
        filters:
          branches:
            only:
              - master
              - /release\/.*/
